# Generated by Django 5.1.4 on 2025-08-15 20:33

import django.db.models.deletion
from django.db import migrations, models


def add_tag_for_reservation(apps, schema_editor):
    """Add a tag corresponding to the reserved_by field, if set"""
    Animal = apps.get_model("birds", "Animal")
    Tag = apps.get_model("birds", "Tag")
    qs = Animal.objects.filter(reserved_by__isnull=False)
    for animal in qs:
        user = animal.reserved_by
        tag, _ = Tag.objects.get_or_create(
            name=user.username,
            description=f"reserved by {user.first_name} {user.last_name}",
        )
        animal.tags.set([tag])
        animal.save()


def set_reserved_by_to_first_tag(apps, schema_editor):
    """Set reserved_by to the first tag that matches a user's name"""
    Animal = apps.get_model("birds", "Animal")
    User = apps.get_model("auth", "User")
    # Get all usernames at once to avoid repeated queries
    usernames = set(User.objects.values_list("username", flat=True))
    # Prefetch tags to avoid N+1 queries
    animals_with_tags = Animal.objects.filter(tags__isnull=False).prefetch_related(
        "tags"
    )

    for animal in animals_with_tags:
        for tag in animal.tags.all():
            if tag.name in usernames:
                try:
                    user = User.objects.get(username=tag.name)
                    animal.reserved_by = user
                    animal.save()
                    break
                except User.DoesNotExist:
                    pass


class Migration(migrations.Migration):
    replaces = [
        ("birds", "0035_tag_animaltag_animal_tags"),
        ("birds", "0036_alter_tag_options_alter_animal_tags"),
    ]

    dependencies = [
        ("birds", "0034_alter_event_options_rename_created_animal_created_at_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField(max_length=16, unique=True)),
                ("description", models.TextField()),
            ],
            options={"ordering": ("name",)},
        ),
        migrations.CreateModel(
            name="AnimalTag",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "animal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="birds.animal"
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="birds.tag"
                    ),
                ),
            ],
            options={
                "unique_together": {("animal", "tag")},
            },
        ),
        migrations.AddField(
            model_name="animal",
            name="tags",
            field=models.ManyToManyField(
                blank=True,
                related_name="animals",
                through="birds.AnimalTag",
                to="birds.tag",
            ),
        ),
        migrations.RunPython(
            code=add_tag_for_reservation, reverse_code=set_reserved_by_to_first_tag
        ),
    ]
